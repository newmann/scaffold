<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
  						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
	  					http://www.springframework.org/schema/aop 
	  					http://www.springframework.org/schema/aop/spring-aop.xsd						                            
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context.xsd    
	  					">

    <!-- 加载配置文件 移到war部分处理-->
<!-- 	<context:property-placeholder location="classpath:config.properties" /> -->

	<!-- 配置数据源 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 初始化连接大小 -->
		<property name="initialSize" value="1" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最大空闲 -->
		<!-- <property name="maxIdle" value="20" /> -->
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="1" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />

		<!-- <property name="poolPreparedStatements" value="true" /> <property 
			name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->

		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
<!-- 		<property name="filters" value="log4j" /> -->
		
		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->  
		<property name="proxyFilters">
			<list>
	            <ref bean="stat-filter" />  
	            <ref bean="log-filter" />  
	            <ref bean="wall-filter" /> 			
			</list>
		</property>
	</bean>

<!-- 	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter"> -->
<!-- 		<property name="statementExecutableSqlLogEnable" value="true" /> -->
<!-- 	</bean> -->
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">  
	    <property name="slowSqlMillis" value="10000" />  
	    <property name="logSlowSql" value="true" />  
	</bean>  
	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter"> 
  		<property name="statementExecutableSqlLogEnable" value="true" /> 
  		<property name="resultSetLogEnabled" value="false" /> 
 	</bean>
	<bean id="wall-filter-config" class="com.alibaba.druid.wall.WallConfig"  
	    init-method="init">  
	    <!-- 指定配置装载的目录 -->  
	    <property name="dir" value="META-INF/druid/wall/mysql" />  
	    <property name="truncateAllow" value="false" />  
	</bean>  
	<bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">  
	    <property name="dbType" value="mysql" />  
	    <property name="logViolation" value="true" />  
	    <property name="throwException" value="false"/>  
	    <property name="config" ref="wall-filter-config" />  
	</bean>   	


	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:footstone/mapping/*.xml" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	<!-- spring与mybatis整合配置，扫描所有dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.beiyelin.service.footstone.dao" />
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 注解方式配置事物 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 拦截器方式配置事物 -->
<!-- 	<tx:advice id="transactionAdvice" transaction-manager="transactionManager"> -->
<!-- 		<tx:attributes> -->
			<!-- 以如下关键字开头的方法使用事物 -->
<!-- 			<tx:method name="add*" /> -->
<!-- 			<tx:method name="save*" /> -->
<!-- 			<tx:method name="update*" /> -->
<!-- 			<tx:method name="modify*" /> -->
<!-- 			<tx:method name="edit*" /> -->
<!-- 			<tx:method name="delete*" /> -->
<!-- 			<tx:method name="remove*" /> -->
<!-- 			<tx:method name="repair*" /> -->
<!-- 			<tx:method name="deleteAndRepair" /> -->
			<!-- 以如下关键字开头的方法不使用事物 -->
<!-- 			<tx:method name="query*" propagation="SUPPORTS" /> -->
<!-- 			<tx:method name="get*" propagation="SUPPORTS" /> -->
<!-- 			<tx:method name="find*" propagation="SUPPORTS" /> -->
<!-- 			<tx:method name="load*" propagation="SUPPORTS" /> -->
<!-- 			<tx:method name="search*" propagation="SUPPORTS" /> -->
<!-- 			<tx:method name="datagrid*" propagation="SUPPORTS" /> -->
			<!-- 其他方法不使用事物 -->
<!-- 			<tx:method name="*" propagation="SUPPORTS" /> -->
<!-- 		</tx:attributes> -->
<!-- 	</tx:advice> -->
	<!-- 切面，将事物用在哪些对象上 -->
<!-- 	<aop:config> -->
<!-- 		<aop:pointcut id="transactionPointcut" expression="execution(* com.beiyelin.service.footstonee.*.*(..))" /> -->
<!-- 		<aop:advisor pointcut-ref="transactionPointcut" -->
<!-- 			advice-ref="transactionAdvice" /> -->
<!-- 	</aop:config> -->


	<!-- 配置druid监控spring jdbc -->
	<bean id="druid-stat-interceptor"
		class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"></bean>
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
		scope="prototype">
		<property name="patterns">
			<list>
				<value>com.beiyelin.service.footstone.dao</value>
			</list>
		</property>
	</bean>
	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor"
			pointcut-ref="druid-stat-pointcut" />
	</aop:config>


</beans>  